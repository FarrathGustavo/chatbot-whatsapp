const qrcode = require('qrcode-terminal');
const { Client, LocalAuth } = require('whatsapp-web.js');

// Cria o cliente WhatsApp
const client = new Client({
    authStrategy: new LocalAuth(),
    puppeteer: {
        args: ['--no-sandbox']
    }
});

// Estado do chat para cada usu√°rio
const userStates = {};

// Mensagem inicial
const welcomeMessage = `Bem-vindo(a) ao Consult√≥rio da Doutora Ana Paula Alencar! üòä
Como posso te ajudar hoje? Escolha uma op√ß√£o abaixo e digite o n√∫mero correspondente:

1Ô∏è‚É£ Agendar consulta
2Ô∏è‚É£ Particular ou Conv√™nio?
3Ô∏è‚É£ Informa√ß√µes sobre tratamentos
4Ô∏è‚É£ Hor√°rios de funcionamento
5Ô∏è‚É£ Desmarcar ou remarcar consulta`;

// Gerar QR Code
client.on('qr', qr => {
    qrcode.generate(qr, {small: true});
    console.log('QR Code gerado! Escaneie com seu WhatsApp.');
});

// Quando o cliente estiver pronto
client.on('ready', () => {
    console.log('Cliente WhatsApp conectado!');
});

// Manipulador de mensagens
client.on('message', async msg => {
    const chat = await msg.getChat();
    const userPhone = msg.from;
    const messageText = msg.body;

    // Inicializa estado do usu√°rio se n√£o existir
    if (!userStates[userPhone]) {
        userStates[userPhone] = {};
        await chat.sendMessage(welcomeMessage);
        return;
    }

    // Processa op√ß√µes do menu
    switch(messageText) {
        case '1':
            if (!userStates[userPhone].dadosAgendamento) {
                await chat.sendMessage(`üìÖ Por favor, informe os seguintes dados:
* Nome completo
* Prefer√™ncia por manh√£ ou tarde
* Tipo de atendimento (exemplo: avalia√ß√£o, limpeza, clareamento dom√©stico, aparelhos ortod√¥nticos)`);
                userStates[userPhone].dadosAgendamento = true;
            } else {
                await chat.sendMessage("Obrigado pelas informa√ß√µes! Entraremos em contato rapidamente para resolver sua solicita√ß√£o.");
                userStates[userPhone] = {};
            }
            break;

        case '2':
            await chat.sendMessage("Voc√™ √© cliente particular ou conv√™nio?");
            userStates[userPhone].tipoCliente = true;
            break;

        case '3':
            await chat.sendMessage(`ü¶∑ Oferecemos os seguintes procedimentos:
* Limpeza dent√°ria
* Clareamento dom√©stico e de consult√≥rio
* Aparelhos ortod√¥nticos e Invisalign
* Est√©tica, harmoniza√ß√£o facial, implante, pr√≥teses, facetas e lentes de contato`);
            break;

        case '4':
            await chat.sendMessage(`üïí Nosso consult√≥rio est√° aberto nos seguintes dias e hor√°rios:
* ‚è∞ Ter√ßa a Quinta: 8h √†s 18h`);
            break;

        case '5':
            if (!userStates[userPhone].dadosRemarcacao) {
                await chat.sendMessage(`Por favor, informe os seguintes dados:
* Nome completo
* Data inicial e hor√°rio da consulta agendada`);
                userStates[userPhone].dadosRemarcacao = true;
            } else {
                await chat.sendMessage("Obrigado pelas informa√ß√µes! Entraremos em contato rapidamente para resolver sua solicita√ß√£o.");
                userStates[userPhone] = {};
            }
            break;

        default:
            handleDefaultMessages(chat, messageText, userPhone);
            break;
    }
});

async function handleDefaultMessages(chat, messageText, userPhone) {
    const msg = messageText.toLowerCase();
    
    if (userStates[userPhone].tipoCliente) {
        if (msg.includes('particular')) {
            await chat.sendMessage("No consult√≥rio realizamos as seguintes atividades: limpeza, clareamento dom√©stico, aparelhos ortod√¥nticos, est√©tica, harmoniza√ß√£o facial, implante, pr√≥teses, facetas e lentes de contato. Posso te ajudar?");
            userStates[userPhone].aguardandoServico = true;
        } else if (msg.includes('convenio') || msg.includes('conv√™nio')) {
            await chat.sendMessage("Atendemos apenas os seguintes conv√™nios: Amil, Porto Seguro, Unna, Bradesco, Odontoprev. Posso te ajudar?");
            userStates[userPhone].aguardandoConvenio = true;
        }
    } else if (userStates[userPhone].aguardandoServico || userStates[userPhone].aguardandoConvenio || userStates[userPhone].dadosAgendamento || userStates[userPhone].dadosRemarcacao) {
        await chat.sendMessage("Obrigado pelas informa√ß√µes! Entraremos em contato rapidamente para resolver sua solicita√ß√£o.");
        userStates[userPhone] = {};
    } else {
        await chat.sendMessage("Desculpe, n√£o entendi. Por favor, digite um n√∫mero de 1 a 5 para escolher uma op√ß√£o.");
    }
}

// Inicializa o cliente
client.initialize();